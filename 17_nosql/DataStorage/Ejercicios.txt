Ejercicios
1. Tengo que crear una aplicación que se encarga de manejar la gestión de dinero en cuenta de los
usuarios de Mercado Pago. Cuando un usuario paga, luego de validar que tiene saldo, tengo que
registrar el pago y decrementar su saldo. Cuando un usuario deposita dinero, tengo que incrementar su
saldo. Asimismo, con cada pago aprobado, y usando los valores del pago y el usuario varias
aplicaciones de Fraude calculan modelos de riesgo de los usuarios. Desde una perspectiva de base de
datos, ¿que utilizarías? ¿Porque? ¿Se te ocurre más de una forma de hacerlo?

-> Siguiendo el diagrama de decisiones, eligiriamos el camino que llega a KVS DB ya que no los datos almacenados no serian del tipo binario. 
Ademas seria una api frecuentemente consultada, porque la cantidad de trafico de mercado pago suponemos que es alto.
La expancion horizontal consistiria en el aumento de usuario utilizanod el servicio.
Generalemente la busqueda de los usuarios se realizaria por id.
El tamaño de las consultas soponemos que no superaria los 50KB.
Finalmente necesitamos consistencia de los datos al tratarse de dinero.

-> Se podria utilizar una base de dato relacional, ya que permite o garantiza mediante triggers el correcto impacto de los datos.
Por ejemplo al realizar un pago, con relacinoal se garantiza el descuento de dinero en la cuenta.

2. Tengo que crear una aplicación que guarda datos de envíos. Para cada envío tengo que guardar algunos datos clave como shippingId, comprador, vendedor, producto, costo total, transportista y ruta. Asimismo, asociado con eso, se debe guardar una foto de la orden de envío. Usualmente el equipo accede a esta data por el shippingId. Además de esto, necesitan obtener en ocasiones, informaciones sobre los envíos para un comprador o vendedor en particular y agrupar por ellos el costo total generado. Finalmente, por cuestiones regulatorias, deben saber hasta por 10 años por que ruta se envió un producto. Desde una perspectiva de base de datos, ¿que utilizarías? ¿Porque? ¿Se te ocurre más de una forma de hacerlo?

-> Por una lado utilizariamos Object Storage para almacenar la foto de la orden de envio.
Los datos de shipping los alamacenariamos en una KVS porque usualmente serian solicitados por el shippingID
Los datos de persistencia los duplicariamos en una db relacinoal para poder resolver consultas complejas