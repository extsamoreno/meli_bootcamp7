1- Una collection para restaurants y otra para neihborhoods.

2- restaurants:25,4K documentos, 10mb total
   neihborhoods: 195 documentos, 3.2mb total	

3- restaurants: indice _id de 241kb
   neihborhoods: _id de 20kb

4-  > db.restaurants.findOne()
    > db.neighborhoods.findOne()

5-  db.restaurants.aggregate([{$project: {   address: {$type: "$address"},   borough: {$type: "$borough"},   cuisine: {$type: "$cuisine"},   grades: {$type: "$grades"},   name: {$type: "$name"},   restaurant_id: {$type: "$restaurant_id"}    }}])db.restaurants.aggregate([{$project: {   address: {$type: "$address"},   borough: {$type: "$borough"},   cuisine: {$type: "$cuisine"},   grades: {$type: "$grades"},   name: {$type: "$name"},   restaurant_id: {$type: "$restaurant_id"}    }}])

SQL

1- > db.restaurants.findOne({},{_id: 0, restaurant_id: 1, name:1, borough:1, cuisine:1})

2- > db.restaurants.find({name: /bake/},{_id: 0, restaurant_id: 1, name:1, borough:1, cuisine:1}).limit(3).pretty()

3- > db.restaurants.aggregate([{$match: {borough: "Bronx", cuisine: {$in:["Chinese","Thai"]}}},{$group:{_id:0,cantidad:{$sum:1}}}]).pretty()
{ "_id" : 0, "cantidad" : 325 }

NoSQL

1-- {grades: {$elemMatch:{grade:"A",score:{$gte: 5}}}}

2-- [{$match: {
  'grades.0': {$exists: true}
}}, {$count: 'cantidad'}]

3-- 
