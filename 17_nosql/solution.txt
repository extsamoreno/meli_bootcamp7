¿Cuántas colecciones tiene la base de datos? 
2

¿Cuántos documentos en cada colección? 
En neighborhoods hay 195 y en Restaurants hay 25359

¿Cuánto pesa cada colección? 
Neighborhoods pesa 3.2 MB y restaurants pesa 10.1 MB

¿Cuántos índices en cada colección? 
Neighborhoods tiene 1 indice y restaurants tiene 1

¿Cuánto espacio ocupan los índices de cada colección? 
en neighborhoods pesa  20 kb y en restaurants pesa 248 kb

Traer un documento de ejemplo de cada colección. db.collection.find(...).pretty() nos da un formato más legible.
db.neighborhoods.find({name:"Bedford"}).pretty()
{ _id: ObjectId("55cb9c666c522cafdb053a1a"),
  geometry: 
   { coordinates: 
      [ [ [ -73.94193078816193, 40.70072523469547 ],
          [ -73.9443878859649, 40.70042452378256 ],
          [ -73.94424286147482, 40.69969927964773 ],
          [ -73.94409591260093, 40.69897295461309 ],
          [ -73.94394947271304, 40.69822127983908 ],
          [ -73.94391750192877, 40.69805620211356 ],
          [ -73.94380383211836, 40.697469265449826 ],
          [ -73.94378455587042, 40.6973697290538 ],
          [ -73.94374306706803, 40.69715549995503 ],
          [ -73.9437245356891, 40.697059812179496 ],
          [ -73.94368427322361, 40.696851909818065 ],
          [ -73.9436842703752, 40.69685189440415 ],
          [ -73.94363806934868, 40.69661331854307 ],
          [ -73.94362121369004, 40.696526279661654 ],
          [ -73.9435563415296, 40.69619128295102 ],
          [ -73.94354024149403, 40.6961081421151 ],
          [ -73.94352527471477, 40.69603085523812 ],
          [ -73.94338802084431, 40.69528899051899 ],
          [ -73.943242490861, 40.694557485733355 ],
          [ -73.94312826743185, 40.693967038330925 ],
          [ -73.94311427813774, 40.693894720557466 ],
          [ -73.94310040895432, 40.69382302905847 ],
          [ -73.94295136131598, 40.69309078423585 ],
          [ -73.94280765181726, 40.692357794128945 ],
          [ -73.94266181801652, 40.69162434435983 ],
          [ -73.94251587928605, 40.69089200097073 ],
          [ -73.94236932748694, 40.690159944665304 ],
          [ -73.94222203471806, 40.68942797886745 ],
          [ -73.94207684924385, 40.68869720298344 ],
          [ -73.9419324508184, 40.687962958755094 ],
          [ -73.94178527584324, 40.687228372121126 ],
          [ -73.94163933150469, 40.68649727009258 ],
          [ -73.94149491757346, 40.68576452882908 ],
          [ -73.94134827184915, 40.685031202512505 ],
          [ -73.94120399291621, 40.68429983923358 ],
          [ -73.94105783787931, 40.68356687284592 ],
          [ -73.9409133427312, 40.682833617234294 ],
          [ -73.94076893329961, 40.68210083903887 ],
          [ -73.94062005382186, 40.68137013010259 ],
          [ -73.94047635005941, 40.680635695422964 ],
          [ -73.94032793962053, 40.67988997506463 ],
          [ -73.94120864299748, 40.67993835375214 ],
          [ -73.94326176928655, 40.68005060712657 ],
          [ -73.94397347805013, 40.680088128426995 ],
          [ -73.94627470970092, 40.68021332692951 ],
          [ -73.94674915979888, 40.680239661363046 ],
          [ -73.9477302355664, 40.680291846282316 ],
          [ -73.9495568871113, 40.68039040292329 ],
          [ -73.95115828512961, 40.68047861480679 ],
          [ -73.95155682676496, 40.680498847575564 ],
          [ -73.95337017508861, 40.68064050844431 ],
          [ -73.95351616791015, 40.68138260047889 ],
          [ -73.95366256227194, 40.68211490361348 ],
          [ -73.95380893530668, 40.68284800827331 ],
          [ -73.95395453033524, 40.68358077882069 ],
          [ -73.95410042574005, 40.684313107633436 ],
          [ -73.95424647696164, 40.68504624826183 ],
          [ -73.95439296867414, 40.685779720013606 ],
          [ -73.95453798607406, 40.68651117540455 ],
          [ -73.95468418850508, 40.68724485443714 ],
          [ -73.95684165193596, 40.68699607883792 ],
          [ -73.95956770121337, 40.68668255592727 ],
          [ -73.95971374756459, 40.6874156340909 ],
          [ -73.95985939425704, 40.688147451217226 ],
          [ -73.96000519802635, 40.688881033718204 ],
          [ -73.96009714565346, 40.689345210097464 ],
          [ -73.96012172912181, 40.68946930706387 ],
          [ -73.96017256138677, 40.68972986156118 ],
          [ -73.96018691858275, 40.689803455988546 ],
          [ -73.96022304539724, 40.689988627383755 ],
          [ -73.96023740336433, 40.69006222280781 ],
          [ -73.96029281668112, 40.690346249915414 ],
          [ -73.96013760800457, 40.69036438035883 ],
          [ -73.96008336800442, 40.6903707157072 ],
          [ -73.95957591847137, 40.69042998753855 ],
          [ -73.95942791320554, 40.69044727471387 ],
          [ -73.95934862389824, 40.6904564609108 ],
          [ -73.95928133730644, 40.69046425696955 ],
          [ -73.95899330491858, 40.69049762936284 ],
          [ -73.95886713625437, 40.69051224801476 ],
          [ -73.95857844775936, 40.690545694857576 ],
          [ -73.9581804874994, 40.69059073040573 ],
          [ -73.95808563435828, 40.69060146372528 ],
          [ -73.95727249112613, 40.69069347835403 ],
          [ -73.95635602958276, 40.69079978191732 ],
          [ -73.95541057949602, 40.690908291885876 ],
          [ -73.95582662769675, 40.69299238288233 ],
          [ -73.95614239268207, 40.69457901857237 ],
          [ -73.9570870194244, 40.694470440162995 ],
          [ -73.95799732979468, 40.694365838684114 ],
          [ -73.95931047927598, 40.69421508783189 ],
          [ -73.96015854658333, 40.69411730915604 ],
          [ -73.96062056531659, 40.6963201401926 ],
          [ -73.96092543804184, 40.69773650701631 ],
          [ -73.96105100700007, 40.698326078819065 ],
          [ -73.96019688857467, 40.698462727438596 ],
          [ -73.95885874627406, 40.6986773264162 ],
          [ -73.95795938220984, 40.69882000321581 ],
          [ -73.95701993123406, 40.698973914349565 ],
          [ -73.957167301054, 40.69970786791901 ],
          [ -73.95722517405626, 40.69999935002626 ],
          [ -73.95745736372834, 40.70082260318457 ],
          [ -73.95572361014881, 40.70194576955721 ],
          [ -73.9538119690652, 40.70318097979544 ],
          [ -73.95318085172319, 40.70261690547745 ],
          [ -73.95255052777945, 40.7020516665144 ],
          [ -73.951920189279, 40.70148754916077 ],
          [ -73.95128819434734, 40.70092236548591 ],
          [ -73.95027424109588, 40.70157924195056 ],
          [ -73.9493787354337, 40.70215888982628 ],
          [ -73.94753858146478, 40.703350650664795 ],
          [ -73.94705205297524, 40.70366394934019 ],
          [ -73.94625107780892, 40.70320874745355 ],
          [ -73.9458549904679, 40.70298720677488 ],
          [ -73.94544988192177, 40.702760635974364 ],
          [ -73.94463910154856, 40.70231369467456 ],
          [ -73.94431460096804, 40.70213334535181 ],
          [ -73.94400504048726, 40.70196179219718 ],
          [ -73.9438247374114, 40.701862007878276 ],
          [ -73.94322686012315, 40.701520709145726 ],
          [ -73.94306406845838, 40.7014244350918 ],
          [ -73.94220058705264, 40.700890667467746 ],
          [ -73.94193078816193, 40.70072523469547 ] ] ],
     type: 'Polygon' },
  name: 'Bedford' }

db.restaurants.find({restaurant_id:"40356018"}).pretty()
{ _id: ObjectId("5eb3d668b31de5d588f4292a"),
  address: 
   { building: '2780',
     coord: [ -73.98241999999999, 40.579505 ],
     street: 'Stillwell Avenue',
     zipcode: '11224' },
  borough: 'Brooklyn',
  cuisine: 'American',
  grades: 
   [ { date: 2014-06-10T00:00:00.000Z, grade: 'A', score: 5 },
     { date: 2013-06-05T00:00:00.000Z, grade: 'A', score: 7 },
     { date: 2012-04-13T00:00:00.000Z, grade: 'A', score: 12 },
     { date: 2011-10-12T00:00:00.000Z, grade: 'A', score: 12 } ],
  name: 'Riviera Caterer',
  restaurant_id: '40356018' }

Para cada colección, listar los campos a nivel raíz (ignorar campos dentro de documentos anidados) y sus tipos de datos.
db.restaurants.find({},{_id:1, borough:1, cuisine:1, name:1, restaurant_id:1})
db.neighborhoods.find({},{_id:1, name:1}).pretty()

-----------------------------------------------------------------------------------------------------

Usando Mongo Shell. Colección restaurants:

Devolver restaurant_id, name, borough y cuisine pero excluyendo _id para un documento (el primero).
db.restaurants.findOne({},{ restaurant_id: 1, name: 1, borough: 1, cuisine: 1, _id: 0 })

Devolver restaurant_id, name, borough y cuisine para los primeros 3 restaurantes que contengan 'Bake' en alguna parte de su nombre.
db.restaurants.find({name:{$regex: /Bake/}},{_id:0, address:0, grades:0}).limit(3)

Contar los restaurantes de comida (cuisine) china (Chinese) o tailandesa (Thai) del barrio (borough) Bronx. Consultar or versus in.
db.restaurants.count({ cuisine: { $in: [ "Chinese", "Thai" ] }, borough: "Bronx" })

-----------------------------------------------------------------------------------------------------

¿Cuál es top 3 de tipos de cocina (cuisine) que podemos encontrar entre los datos? Googlear "mongodb group by field, count it and sort it". Ver etapa limit del pipeline de agregación.

¿Cuáles son los barrios más desarrollados gastronómicamente? Calcular el promedio ($avg) de puntaje (grades.score) por barrio; considerando restaurantes que tengan más de tres reseñas; ordenar barrios con mejor puntaje arriba. Ayuda:


match es una etapa que filtra documentos según una condición, similar a db.orders.find(<condición>).

Parece necesario deconstruir las listas grades para producir un documento por cada puntaje utilizando la etapa unwind.

Una persona con ganas de comer está en longitud -73.93414657 y latitud 40.82302903, ¿qué opciones tiene en 500 metros a la redonda? Consultar geospatial tutorial.


db.restaurants.aggregate([
{$group:
        { 
            _id:{
                codigo:"1",
                fechaAlta:{$substr:["$fechaAlta",0,10]},
            },
            total:{$sum:1}
        }
    },
    {$sort:
        {"_id":1}
    }
])
